# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

# Akka Remote
# -----
akka {
  actor {
    provider = "akka.remote.RemoteActorRefProvider"
  }

  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2550
    }
  }
}

solar-farm-monitor {
  analyzer {
    port = 2551
    hostname = "127.0.0.1"
    inspector-actor-path = "akka.tcp://application@"${solar-farm-monitor.analyzer.hostname}":"${solar-farm-monitor.analyzer.port}"/user/analysis-supervisor/inspection-supervisor/inspection-manager"
    buffer-actor-path = "akka.tcp://application@"${solar-farm-monitor.analyzer.hostname}":"${solar-farm-monitor.analyzer.port}"/user/analysis-supervisor/buffer"
    inspection-interval = 1 second
    measurement-interval = 1 second
    error-notification-interval = 1 second
    connection-attempt-interval = 1 second
    connection-attempt-timeout = 5 minutes
    initial-connection-attempt-timeout = 2 seconds
  }
}

# Log
# -----

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = DEBUG
  debug {
    receive = off
    lifecycle = off
    autoreceive = off
    fsm = on
    event-stream = off
  }
  cluster.log-info = off
  remote.log-remote-lifecycle-events = on
}
